@startuml
interface Sorter{
  +load(elements:int[])
  +sort()
  +getPlan()
}

interface Linable{
  +setPosition(position:Position):void
  +getPosition():Position
  +getValue():int
}

class BubbleSorter implements Sorter{
  -a:int[] 
  -swap():void
}

enum Gourd implements Linable{
    ONE
    TWO
    THREE
    FOUR
    FIVE
    SIX
    SEVEN
  -r,g,b : int
  -position:Position
  Gourd(r,g,b:int)
  +{static}getGourdByRank(rank:int):Gourd
  +rank():int
  +swapPosition(another:Gourd):void
}

class Line{
    -positions:Position[]
    +Line(length:int)
    +toArray():Linable
    +put(linable:Linable, i:int):void
    +get(i:int):Linable
}

class Position{
    -linable:Linable
    Position(linable:Linable)
    +setLinable(linable:Linable):void
}

class Geezer{
  -{static} theGeezer:Geezer
  +{static}getTheGeezer():Geezer
  -Geezer()
  -sorter:Sorter
  +setSorter(sorter:Sorter):void
  -parsePlan(plan:String):String[]
  -execute(step:string):void
}

Line "1" o-- "N" Position
Gourd "1" o-- "1" Position
Geezer "1" o-- "1" Sorter
@enduml